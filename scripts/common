#!/bin/bash
#
#
# Common bash components

################
### DEFAULTS ###
################

# COMMAND_FILE - full path and file name to where the commands required to be run,
# based on a configuration file, are stored. Commands are generated via Python as
# it is much easier to handle YAML files within Python. Changing the default is 
# useful for testing.
# Default: /tmp/ros-service-commands
COMMAND_FILE="/tmp/service-commands"

# CONFIG_FILE - full path to a configuration file. The default path is based on the 
# current user. Changing the default is  useful for testing.
# Default: /home/<current-user>/.qcr/ros-service-config.yml
CONFIG_FILE="/home/$USER/.qcr/service-config.yml"

# CURRENT_CONFIG_FILE - the location of the current config file used. User config files
# are copied to this located. Changing the default is 
# useful for testing.
# Default: /etc/qcr/ros-service-config.yml
CURRENT_CONFIG_FILE="/etc/qcr/service-config.yml"

# CURRENT_CONFIG_DETAILS - a text file storing the current user and original location
# of the user's config file. Changing the default is useful for testing.
# Default: /etc/qcr/current-service-config-values
CURRENT_CONFIG_DETAILS="/etc/qcr/current-service-config-values"

# DEFAULT_CONFIG_FILE - the location of the default config file. Changing the default
# is useful for testing.
# Default: /etc/qcr/ros-service-config_default.yml
DEFAULT_CONFIG_FILE="/etc/qcr/service-config_default.yml"

# SERVICE_PATH - contains the path to where systemd service files are stored.
# Changing the default is useful for testing.
# Default: /etc/systemd/system/.
SERVICE_PATH="/etc/systemd/system/"

# SERVICE_USER - contains a string appended to the generated service files prior to the '.service' file extension.
# Default: current user
SERVICE_USER=$USER

# Screen Reset
RESET='\033[0m'

# Screen Colors
BLACK="\033[0;30m"
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
BLUE="\033[0;34m"
PURPLE="\033[0;35m"
CYAN="\033[0;36m"
WHITE="\033[0;37m"

# Screen helpers
INFO="${GREEN}[INFO]${RESET} "
WARN="${YELLOW}[WARN]${RESET} "
ERROR="${RED}[ERROR]${RESET} "

#################
### FUNCTIONS ###
#################

function _create_test_folder_structure() {

    mkdir -p "${1}/home/"
    mkdir -p "${1}/etc/qcr/"
    mkdir -p "${1}/etc/systemd/system/"
    mkdir -p "${1}/tmp/"
}

function _get_script_dr() {
    # Usage: SCRIPT_DIR=$(_get_script_dir)
    echo "$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
}

function _get_test_dir() {
    # Usage: TEST_DIR=$(_get_test_dir)
    echo $(dirname $(_get_script_dr))/test
}

function display_heading() {
    # Prints a heading to the screen
    #
    # Usage:
    #   display_heading "<HEADING TEXT>"

    # $1 heading text
    char="-"
    text=" ${1:-} "
    (( left_pad=(80 - ${#text})/2 ))
    (( right_pad=(81 - ${#text})/2 ))
    printf "${GREEN}"
    printf "\n"; printf "%.0s$char" {1..80}; printf "\n"
    printf "%.0s$char" $(seq 1 $left_pad)
    printf "${WHITE}$text${GREEN}"
    printf "%.0s$char" $(seq 1 $right_pad)
    printf "\n"; printf "%.0s$char" {1..80}; printf "\n"
    printf "${RESET}"
}